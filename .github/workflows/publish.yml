name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string
      changelog:
        description: 'Changelog entry for this version'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Create and activate virtual environment
        run: |
          uv venv
          source .venv/bin/activate
          which python
          python --version
          pip list

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Update version and changelog
        if: github.event_name == 'workflow_dispatch'
        run: |
          source .venv/bin/activate
          python scripts/update_version.py ${{ github.event.inputs.version }}
          python scripts/update_changelog.py "${{ github.event.inputs.changelog }}"

      - name: Verify version format
        run: |
          source .venv/bin/activate
          python -c "import re; import toml; version = toml.load('pyproject.toml')['project']['version']; assert re.match(r'^\d+\.\d+\.\d+$', version), f'Invalid version format: {version}'"

      - name: Build package
        run: |
          source .venv/bin/activate
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          source .venv/bin/activate
          twine upload dist/*

      - name: Commit version changes
        if: github.event_name == 'workflow_dispatch' && success()
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add pyproject.toml CHANGELOG.md
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
          git push
