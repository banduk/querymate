name: Documentation

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  release:
    types: [published]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write
  issues: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Cache virtual environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-docs-${{ hashFiles('**/pyproject.toml') }}

      - name: Create and activate virtual environment
        run: |
          uv venv
          source .venv/bin/activate
          which python
          python --version
          pip list

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          uv pip install -e .[dev]

      - name: Build documentation
        run: |
          source .venv/bin/activate
          cd docs
          make clean
          make html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html

      - name: Comment PR with preview link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const artifactPath = path.join(process.env.GITHUB_WORKSPACE, 'docs/_build/html');
            const files = fs.readdirSync(artifactPath);
            const previewUrl = `https://${process.env.GITHUB_REPOSITORY_OWNER}.github.io/${process.env.GITHUB_REPOSITORY.split('/')[1]}/preview/${process.env.GITHUB_HEAD_REF}/`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ“š Documentation preview available at: ${previewUrl}`
            });

  deploy_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
